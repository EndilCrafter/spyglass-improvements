plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven { url = "https://maven.theillusivec4.top/" } // Curios

}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // To test soft Curios dependency, (un)comment the runtimeOnly line below when running runClient and runServer tasks
    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${rootProject.curios_version}"
    compileOnly "top.theillusivec4.curios:curios-neoforge:${rootProject.curios_version}:api"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
